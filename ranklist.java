/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examtantra;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Subhra CHOUDHURY
 */
public class ranklist extends javax.swing.JFrame {

    /**
     * Creates new form ranklist
     */
    public ranklist() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("RANK LIST");

        cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select test code--" }));
        cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbActionPerformed(evt);
            }
        });

        jLabel2.setText("TEST CODE");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RANK", "STUDENT ID", "NAME", "SUBJECT", "CLASS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel2)
                        .addGap(110, 110, 110)
                        .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(jButton1)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
try
{
     Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/examtantra","root","1192002");
            Statement stmt=con.createStatement();
            String t="select testcode from testinfo";
             ResultSet rs=stmt.executeQuery(t);
             while(rs.next())
             {
                 
                     String s=rs.getString("testcode");
                     cb.addItem(s);
                 }
}catch(Exception e)
{
    JOptionPane.showMessageDialog(null,e);
}// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbActionPerformed
if(cb.getSelectedIndex()==0)
{
}
else{
    try{
        DefaultTableModel my_model=(DefaultTableModel) table.getModel();
        my_model.setRowCount(0);
        Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/examtantra","root","1192002");
            Statement stmt=con.createStatement();
           //no. of entries
            String c="Select count(studid) from student_marks where testid='"+cb.getSelectedItem()+"' ;";
            ResultSet rs=stmt.executeQuery(c);
                    int qu=0;
            if(rs.next())
            {
                int q=rs.getInt("count(studid)");
                qu=q;
            }
            
            //studid
            String r="Select studid from student_marks where testid='"+cb.getSelectedItem()+"' order by marks desc;";
            ResultSet rs1=stmt.executeQuery(r);
            String[] stid = new String[qu];
            int j=0;
            while(rs1.next())
            {
                String ssid=rs1.getString("studid");
                stid[j]= ssid;   
                j++;
                
            
            }
            //rank
            int count=1;
            int[] qn = new int[qu]; 
            for(int i=0;i<qu;i++)
            {
                qn[i]=count;
                    
                
                count++;
            }
            //SUBJECT
            String sub="Select subject from testinfo where testcode='"+cb.getSelectedItem()+"';";
            ResultSet rs2=stmt.executeQuery(sub);
            String subj=null;
            if(rs2.next())
            {
                String sbj=rs2.getString("subject");
               subj=sbj;
               
            }
            
            String[] sb = new String[qu];
            for(int i=0;i<qu;i++)
            {
                sb[i]=subj;
            }
            String[] sname = new String[qu];
                  String[] sclass = new String[qu];
                  int l=0;
            for(int i=0;i<qu;i++)
            {
                int k=Integer.parseInt(stid[i]);
                String nc="Select name,class from studinfo where roll="+k+" ";
                ResultSet rs9=stmt.executeQuery(nc);
                 
                
                while(rs9.next())
                {
                    String nm=rs9.getString("name");
                    String cl=rs9.getString("class");
                    sname[l]=nm;
                    sclass[l]=cl;
                    l++;
                    
                }
            }
            //enter entries
            for(int i=0;i<qu;i++)
            {
                Object[] row={qn[i],stid[i],sname[i],sb[i],sclass[i]};
                my_model.addRow(row);
            }
            
  int nor=my_model.getRowCount();
  if(nor==0)
  {
      JOptionPane.showMessageDialog(null,"TEST NOT ATTEMPTED BY ANYONE YET");
  }
            
            
        
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null,"e");
    }
}
    }//GEN-LAST:event_cbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
adminmenu a=new adminmenu();
a.setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ranklist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ranklist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ranklist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ranklist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ranklist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
